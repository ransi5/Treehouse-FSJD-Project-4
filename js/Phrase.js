/* Treehouse FSJS Techdegree
 * Project 4 - OOP Game App
 * Phrase.js */

 /*
variables
*/

const guessPhrase = document.querySelector('#phrase ul');
const overlay = document.getElementById('overlay');
const heading = document.querySelector('#overlay h1');
const tries = document.querySelectorAll('.tries img');
const guessChar = document.getElementsByClassName('letter');
const show = document.getElementsByClassName('show');
const key = document.getElementsByClassName('key');
let chosen = document.getElementsByClassName('chosen');
let phraseDisplayed = [];
var letterFound, i, missed, letter;

/*
1   The `Phrase` class will add the phrase to display in the DOM. it has one parameter the random `phrase`
    generated by the Game class.
2   `addPhraseToDisplay` will add the phrase to display in the DOM.
3   `handleInteraction` will handle user interaction with the game using `checkLetter` method.
4   `checkLetter` method with event parameter will check if letter guessed by user is in the phrase.
4.1 checks if event type is click on screen keyboard. if true it adds `chosen` class and disables the button.
4.2 else statement executes code on user keyboard input on `keyup` event. it selects the same key as user selected
    on the screen key board and if it was selected by the user before, it then adds the chosen class and disables the
    screen button for it.
4.3 using loop this statement checks the letter inputed by user is in the phrase and sets letterFound variable and shows
    the matched letter every where in the phrase on screen
4.4 using conditional and loop statement the program disables the key pressed by user. if letter is found it applies the
    chosen class else the wrong class
5   `showMatchedLetter` method takes user input character as a parameter and if letter id found it displays the character
    everywhere it appears in the phrase on screen.
*/

class Phrase {                                  //1
 constructor(phrase) {
   this.phrase = phrase.toLowerCase().split('');
 }

 addPhraseToDisplay() {                           //2
   for (let i = 0; i < this.phrase.length; i++){
      let li = document.createElement('LI');
      let listItem = this.phrase[i];
      li.textContent = listItem;
      if (li.textContent != ' ') {
        li.className = 'letter';
      } else {
        li.className = 'space';
      }
      guessPhrase.append(li);
    }
  }

  handleInteraction(event) {                //3
    this.checkLetter(event);
  }

  checkLetter(event) {                              //4
    letterFound = '';
    if (event.type == 'click') {                        //4.1
      letter = event.target.textContent;
    } else {                                        //4.2
      letter = event.key;
    }

    this.phrase.forEach((char, i) => {                      //4.3
      if ( letter.toLowerCase() == char.toLowerCase() ) {
        this.showMatchedLetter(char);
        return letterFound = true;
      }
    })

    if ( letterFound ) {                          //4.4
      for ( i = 0; i < key.length; i++) {
        if  (key[i].textContent == letter.toLowerCase() ) {
          key[i].setAttribute('disabled', true);
          key[i].classList.add('chosen');
        }
      }
    } else {
      for ( i = 0; i < key.length; i++) {
        if  (key[i].textContent == letter.toLowerCase() ) {
          key[i].setAttribute('disabled', true);
          key[i].classList.add('wrong');
        }
      }
    }
  }

  showMatchedLetter(char) {                                 //5
    for ( var i = 0; i < guessChar.length; i++ ) {
      if ( guessChar[i].textContent == char ) {
        guessChar[i].className += ' show';
      }
    }
  }
}
